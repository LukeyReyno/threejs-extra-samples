(()=>{"use strict";var e,t={137:function(e,t,n){var r,o=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[t.length]=n);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n=r(e),a=0;a<n.length;a++)"default"!==n[a]&&o(t,e,n[a]);return i(t,e),t});Object.defineProperty(t,"__esModule",{value:!0});const l=a(n(437)),s=n(246),c=n(351),d=5e3;let u,f,v,p,m,x,b,g,h,w=!0;const y=()=>{f.aspect=window.innerWidth/window.innerHeight,f.updateProjectionMatrix(),m.setSize(window.innerWidth,window.innerHeight)},C=(e,t)=>{p.setFromXRController(b);const n=p.intersectObjects(x.children,!1);n.length>0?h!=n[0].object&&(h&&h.material.uniforms.selectColor.value.copy(h.currentColor),h=n[0].object,h.currentColor=h.material.uniforms.selectColor.value.clone(),h.material.uniforms.selectColor.value.set(1,.1,.1)):(h&&h.material.uniforms.selectColor.value.copy(h.currentColor),h=void 0);for(let t=0;t<x.children.length;t++){const n=x.children[t];if(!(n instanceof l.InstancedMesh))return;n.material&&n.material.uniforms&&n.material.uniforms.time&&(n.material.uniforms.time.value=e/1e3);const r=new l.Object3D;for(let e=0;e<d;e++)n.getMatrixAt(e,r.matrix),r.matrix.decompose(r.position,r.quaternion,r.scale),r.rotation.x+=.01,r.rotation.y+=.01,r.updateMatrix(),n.setMatrixAt(e,r.matrix);n.instanceMatrix.needsUpdate=!0}m.render(v,f)};(()=>{u=document.createElement("div"),document.body.appendChild(u),v=new l.Scene,v.background=new l.Color(13684944),f=new l.PerspectiveCamera(50,window.innerWidth/window.innerHeight,.1,2e3),f.position.set(0,1.6,3),v.add(f),x=new l.Object3D,v.add(x),v.add(new l.HemisphereLight(10855845,9013641,3));const e=new l.DirectionalLight(16777215,3);e.position.set(1,1,1).normalize(),v.add(e);const t=new l.TextureLoader,n=t.load("./textures/ripple_albedo.png"),r=t.load("./textures/ripple_normal.png"),o=new l.ShaderMaterial({vertexShader:"\n        varying vec2 vUv;\n\n        void main() {\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * instanceMatrix * vec4(position, 1.0);\n        }\n      ",fragmentShader:"\n        precision highp float;\n        uniform float time;\n        uniform sampler2D albedoMap;\n        uniform sampler2D normalMap;\n        uniform bool foveationEnabled;\n        uniform vec3 selectColor;\n        uniform vec3 lightPos;\n        uniform vec3 viewPos;\n        varying vec2 vUv;\n\n        void main() {\n          vec2 texCoord = vUv;\n          vec3 color = vec3(texCoord, 0.5 + 0.5 * sin(time));\n\n          // Sobel filter kernel\n          float kernelX[9];\n          kernelX[0] = -1.0; kernelX[1] = 0.0; kernelX[2] = 1.0;\n          kernelX[3] = -2.0; kernelX[4] = 0.0; kernelX[5] = 2.0;\n          kernelX[6] = -1.0; kernelX[7] = 0.0; kernelX[8] = 1.0;\n\n          float kernelY[9];\n          kernelY[0] = -1.0; kernelY[1] = -2.0; kernelY[2] = -1.0;\n          kernelY[3] = 0.0;  kernelY[4] = 0.0;  kernelY[5] = 0.0;\n          kernelY[6] = 1.0;  kernelY[7] = 2.0;  kernelY[8] = 1.0;\n\n          vec2 texOffset = 1.0 / vec2(textureSize(albedoMap, 0)); // gets size of single texel\n          vec3 texSample[9];\n          texSample[0] = texture2D(albedoMap, texCoord + texOffset * vec2(-1, -1)).rgb;\n          texSample[1] = texture2D(albedoMap, texCoord + texOffset * vec2( 0, -1)).rgb;\n          texSample[2] = texture2D(albedoMap, texCoord + texOffset * vec2( 1, -1)).rgb;\n          texSample[3] = texture2D(albedoMap, texCoord + texOffset * vec2(-1,  0)).rgb;\n          texSample[4] = texture2D(albedoMap, texCoord + texOffset * vec2( 0,  0)).rgb;\n          texSample[5] = texture2D(albedoMap, texCoord + texOffset * vec2( 1,  0)).rgb;\n          texSample[6] = texture2D(albedoMap, texCoord + texOffset * vec2(-1,  1)).rgb;\n          texSample[7] = texture2D(albedoMap, texCoord + texOffset * vec2( 0,  1)).rgb;\n          texSample[8] = texture2D(albedoMap, texCoord + texOffset * vec2( 1,  1)).rgb;\n\n          vec3 sobelX = vec3(0.0);\n          vec3 sobelY = vec3(0.0);\n          for (int i = 0; i < 9; i++) {\n            sobelX += texSample[i] * kernelX[i];\n            sobelY += texSample[i] * kernelY[i];\n          }\n\n          vec3 sobel = sqrt(sobelX * sobelX + sobelY * sobelY);\n          color += sobel;\n\n          // Normal mapping\n          vec3 normal = texture2D(normalMap, texCoord).rgb;\n          normal = normalize(normal * 2.0 - 1.0);\n\n          // Lighting calculations\n          vec3 lightDir = normalize(lightPos - vec3(gl_FragCoord.xy, 0.0));\n          float diff = max(dot(normal, lightDir), 0.0);\n          vec3 diffuse = diff * color;\n\n          // Specular highlight\n          vec3 viewDir = normalize(viewPos - vec3(gl_FragCoord.xy, 0.0));\n          vec3 reflectDir = reflect(-lightDir, normal);\n          float spec = pow(max(dot(viewDir, reflectDir), 0.0), 32.0);\n          vec3 specular = vec3(0.5) * spec;\n\n          // Combine results\n          vec3 ambientStrength = vec3(0.05, 0.05, 0.05);\n          ambientStrength.r += foveationEnabled ? 0.0 : 0.05;\n          ambientStrength.g += foveationEnabled ? 0.05 : 0.0;\n\n          vec3 finalColor = ambientStrength + diffuse + specular;\n          \n          // Override with selectColor if applicable\n          finalColor.r = (selectColor.r >= 0.0) ? selectColor.r : finalColor.r;\n          finalColor.g = (selectColor.g >= 0.0) ? selectColor.g : finalColor.g;\n          finalColor.b = (selectColor.b >= 0.0) ? selectColor.b : finalColor.b;\n\n          gl_FragColor = vec4(finalColor, 0.9);\n        }\n      ",uniforms:{time:{value:0},albedoMap:{value:n},normalMap:{value:r},lightPos:{value:e.position.normalize()},viewPos:{value:f.position.normalize()},selectColor:{value:new l.Vector3(-1,-1,-1)},foveationEnabled:{value:w}}}),i=new l.BoxGeometry(.15,.15,.15),a=new l.InstancedMesh(i,o,d),h=new l.Object3D;for(let e=0;e<d;e++){let t,n,r;const o=2,i=2;do{t=8*Math.random()-4,n=8*Math.random()-4}while(Math.abs(t)<o&&Math.abs(n)<i);r=1*Math.random()-3-.5,h.position.set(t,n,r),h.rotation.set(2*Math.random()*Math.PI,2*Math.random()*Math.PI,2*Math.random()*Math.PI),h.updateMatrix(),a.setMatrixAt(e,h.matrix)}x.add(a),p=new l.Raycaster,m=new l.WebGLRenderer({antialias:!0}),m.setPixelRatio(window.devicePixelRatio),m.setSize(window.innerWidth,window.innerHeight),m.setAnimationLoop(C),m.xr.enabled=!0,u.appendChild(m.domElement),b=m.xr.getController(0);b.addEventListener("selectstart",(()=>{b.userData.isSelecting=!0,w=!w,m.xr.setFoveation(w?1:0);for(let e=0;e<x.children.length;e++){const t=x.children[e];if(!(t instanceof l.InstancedMesh))return;t.material&&t.material.uniforms&&t.material.uniforms.foveationEnabled&&(t.material.uniforms.foveationEnabled.value=w)}})),b.addEventListener("selectend",(()=>{b.userData.isSelecting=!1})),b.addEventListener("connected",(e=>{const t=(e=>{let t,n;switch(e.targetRayMode){case"tracked-pointer":return t=new l.BufferGeometry,t.setAttribute("position",new l.Float32BufferAttribute([0,0,0,0,0,-1],3)),t.setAttribute("color",new l.Float32BufferAttribute([.5,.5,.5,0,0,0],3)),n=new l.LineBasicMaterial({vertexColors:!0,blending:l.AdditiveBlending}),new l.Line(t,n);case"gaze":return t=new l.RingGeometry(.02,.04,32).translate(0,0,-1),n=new l.MeshBasicMaterial({opacity:.5,transparent:!0}),new l.Mesh(t,n)}})(e.data);t&&b.add(t)})),b.addEventListener("disconnected",(()=>{b.remove(b.children[0])})),v.add(b);const M=new c.XRControllerModelFactory;g=m.xr.getControllerGrip(0),g.add(M.createControllerModel(g)),v.add(g),window.addEventListener("resize",y),document.body.appendChild(s.VRButton.createButton(m,{optionalFeatures:[]}))})()},246:(e,t,n)=>{n.r(t),n.d(t,{VRButton:()=>r});class r{static createButton(e,t={}){const n=document.createElement("button");function o(){n.style.display="",n.style.cursor="auto",n.style.left="calc(50% - 75px)",n.style.width="150px",n.onmouseenter=null,n.onmouseleave=null,n.onclick=null}function i(e){e.style.position="absolute",e.style.bottom="20px",e.style.padding="12px 6px",e.style.border="1px solid #fff",e.style.borderRadius="4px",e.style.background="rgba(0,0,0,0.1)",e.style.color="#fff",e.style.font="normal 13px sans-serif",e.style.textAlign="center",e.style.opacity="0.5",e.style.outline="none",e.style.zIndex="999"}if("xr"in navigator)return n.id="VRButton",n.style.display="none",i(n),navigator.xr.isSessionSupported("immersive-vr").then((function(i){i?function(){let r=null;async function o(t){t.addEventListener("end",i),await e.xr.setSession(t),n.textContent="EXIT VR",r=t}function i(){r.removeEventListener("end",i),n.textContent="ENTER VR",r=null}n.style.display="",n.style.cursor="pointer",n.style.left="calc(50% - 50px)",n.style.width="100px",n.textContent="ENTER VR";const a={...t,optionalFeatures:["local-floor","bounded-floor","layers",...t.optionalFeatures||[]]};n.onmouseenter=function(){n.style.opacity="1.0"},n.onmouseleave=function(){n.style.opacity="0.5"},n.onclick=function(){null===r?navigator.xr.requestSession("immersive-vr",a).then(o):(r.end(),void 0!==navigator.xr.offerSession&&navigator.xr.offerSession("immersive-vr",a).then(o).catch((e=>{console.warn(e)})))},void 0!==navigator.xr.offerSession&&navigator.xr.offerSession("immersive-vr",a).then(o).catch((e=>{console.warn(e)}))}():(o(),n.textContent="VR NOT SUPPORTED"),i&&r.xrSessionIsGranted&&n.click()})).catch((function(e){o(),console.warn("Exception when trying to call xr.isSessionSupported",e),n.textContent="VR NOT ALLOWED"})),n;{const e=document.createElement("a");return!1===window.isSecureContext?(e.href=document.location.href.replace(/^http:/,"https:"),e.innerHTML="WEBXR NEEDS HTTPS"):(e.href="https://immersiveweb.dev/",e.innerHTML="WEBXR NOT AVAILABLE"),e.style.left="calc(50% - 90px)",e.style.width="180px",e.style.textDecoration="none",i(e),e}}static registerSessionGrantedListener(){if("undefined"!=typeof navigator&&"xr"in navigator){if(/WebXRViewer\//i.test(navigator.userAgent))return;navigator.xr.addEventListener("sessiongranted",(()=>{r.xrSessionIsGranted=!0}))}}}r.xrSessionIsGranted=!1,r.registerSessionGrantedListener()}},n={};function r(e){var o=n[e];if(void 0!==o)return o.exports;var i=n[e]={exports:{}};return t[e].call(i.exports,i,i.exports,r),i.exports}r.m=t,e=[],r.O=(t,n,o,i)=>{if(!n){var a=1/0;for(d=0;d<e.length;d++){for(var[n,o,i]=e[d],l=!0,s=0;s<n.length;s++)(!1&i||a>=i)&&Object.keys(r.O).every((e=>r.O[e](n[s])))?n.splice(s--,1):(l=!1,i<a&&(a=i));if(l){e.splice(d--,1);var c=o();void 0!==c&&(t=c)}}return t}i=i||0;for(var d=e.length;d>0&&e[d-1][2]>i;d--)e[d]=e[d-1];e[d]=[n,o,i]},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e={358:0};r.O.j=t=>0===e[t];var t=(t,n)=>{var o,i,[a,l,s]=n,c=0;if(a.some((t=>0!==e[t]))){for(o in l)r.o(l,o)&&(r.m[o]=l[o]);if(s)var d=s(r)}for(t&&t(n);c<a.length;c++)i=a[c],r.o(e,i)&&e[i]&&e[i][0](),e[i]=0;return r.O(d)},n=self.webpackChunkthreejs_extra_samples=self.webpackChunkthreejs_extra_samples||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})();var o=r.O(void 0,[867],(()=>r(137)));o=r.O(o)})();